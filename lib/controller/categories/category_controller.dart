import 'dart:io';import 'package:admin_app/core/class/crud.dart';import 'package:admin_app/core/constant/route_name.dart';import 'package:admin_app/core/functions/printing.dart';import 'package:admin_app/core/functions/status_request.dart';import 'package:admin_app/core/functions/upload_file.dart';import 'package:admin_app/core/model/Category_model.dart';import 'package:admin_app/data/remote_data/category_data.dart';import 'package:awesome_dialog/awesome_dialog.dart';import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get/get.dart';import 'package:permission_handler/permission_handler.dart';class CategoryController extends GetxController    with GetSingleTickerProviderStateMixin {  CategoriesData categoriesData = CategoriesData(Crud());  List<CategoryModel> categories_list = [];  StatusRequest? statusRequest;  AnimationController? animationController;  get_categories() async {    statusRequest = StatusRequest.loading;    update();    try {      await categoriesData.get_categories().then((val) {        if (val['status'] == 'success') {          categories_list.clear();          val['data'].forEach((element) {            categories_list.add(CategoryModel.fromJson(element));          });          statusRequest = StatusRequest.success;          update();        } else {          statusRequest = StatusRequest.failure;          update();        }      });    } catch (e) {      Get.snackbar('Error during get categories', '');      statusRequest = StatusRequest.failure;      update();    }  }  delete_cat(String cat_id, context) async {    AwesomeDialog(      context: context,      dialogType: DialogType.info,      animType: AnimType.rightSlide,      title: 'Delete Alert',      desc: 'Are you sure to delete this section?',      btnCancelOnPress: () {},      btnOkOnPress: () async {        statusRequest = StatusRequest.loading;        update();        await categoriesData.delete_category(cat_id).then((val) async {          if (val['status'] == 'success') {            await get_categories();            Get.snackbar('Deleted Done', '');            statusRequest = StatusRequest.success;            update();          } else {            Get.snackbar('Delete Failed', '');          }        });      },    ).show();  }  GoToAddCategoryScreen(index) {    // index == -1 ? add : edit    Get.toNamed(RouteName.add_category_screen, arguments: {      'category': index == -1 ? null : categories_list[index],    });  }  @override  void onInit() async {    await get_categories();    animationController = AnimationController(vsync: this);    super.onInit();  }}