import 'dart:convert';import 'dart:io';import 'package:admin_app/core/functions/status_request.dart';import 'package:dartz/dartz.dart';import 'package:http/http.dart' as http;class Crud {  Future<Either<StatusRequest, Map>> postData(String linkUrl, Map data) async {    var response = await http.post(Uri.parse(linkUrl), body: data);    if (response.statusCode == 200 || response.statusCode == 201) {      Map response_body = jsonDecode(response.body);      return Right(response_body);    } else {      return Left(StatusRequest.failure);    }    // if (checkInternet() == true) {    //    // } else {    //   return Left(StatusRequest.offline_failure);    // }  }  Future<Either<StatusRequest, Map>> addRequestWithImageOne(      url, data, File? image,      [String? namerequest]) async {    namerequest ??= "files";    var uri = Uri.parse(url);    var request = http.MultipartRequest("POST", uri);    request.headers.addAll({});    if (image != null) {      var length = await image.length();      var stream = http.ByteStream(image.openRead());      stream.cast();      var multipartFile = http.MultipartFile(namerequest, stream, length,          filename: (image.path));      request.files.add(multipartFile);    }    // add Data to request    data.forEach((key, value) {      request.fields[key] = value;    });    // add Data to request    // Send Request    var myrequest = await request.send();    // For get Response Body    var response = await http.Response.fromStream(myrequest);    if (response.statusCode == 200 || response.statusCode == 201) {      print(response.body);      Map responsebody = jsonDecode(response.body);      return Right(responsebody);    } else {      return const Left(StatusRequest.server_failure);    }  }}