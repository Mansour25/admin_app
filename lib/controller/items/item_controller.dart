import 'package:admin_app/controller/categories/category_controller.dart';import 'package:admin_app/core/class/crud.dart';import 'package:admin_app/core/constant/route_name.dart';import 'package:admin_app/core/functions/printing.dart';import 'package:admin_app/core/functions/status_request.dart';import 'package:admin_app/core/model/Category_model.dart';import 'package:admin_app/core/model/ItemModel.dart';import 'package:admin_app/data/remote_data/items_data.dart';import 'package:awesome_dialog/awesome_dialog.dart';import 'package:get/get.dart';class ItemController extends GetxController {  ItemsData itemsData = ItemsData(Crud());  List<MainItemModel> items = [];  StatusRequest? statusRequest;  int select_cat = 1;  List<CategoryModel> categories = [];  change_select(int index) async {    select_cat = index;    await get_items_selected();    update();  }  List<MainItemModel> current_items_selectes = [];  get_items_selected() async {    statusRequest = StatusRequest.loading;    update();    current_items_selectes.clear();    items.forEach((element) {      if (element.itemCat  == categories[select_cat].categoryId) {      // categories[select_cat].categoryId هذي بتجيب ال اي دي للصنف المحدد حسب ترتيبه في قاعدة البيانات      //select_cat        current_items_selectes.add(element);      }    });    statusRequest = StatusRequest.success;    update();  }  get_items() async {    statusRequest = StatusRequest.loading;    update();    try {      await itemsData.get_items().then((val) {        if (val['status'] == 'success') {          items.clear();          val['data'].forEach((element) {            items.add(MainItemModel.fromJson(element));          });          statusRequest = StatusRequest.success;          update();        } else {          // statusRequest = StatusRequest.failure;          // update();          Get.snackbar('Fail', '');        }      });    } catch (e) {      Get.snackbar('Failure', '');      statusRequest = StatusRequest.failure;      update();    }  }  bool isControllerCategoryRegistered = Get.isRegistered<CategoryController>();  bool isControllerItemRegistered = Get.isRegistered<ItemController>();  CategoryController? controller;  get_caegories() async {    statusRequest = StatusRequest.loading;    if (isControllerCategoryRegistered) {      controller = Get.find();    } else {      controller = Get.put(CategoryController());    }    await controller?.get_categories();    categories = (controller!.categories_list);    statusRequest = StatusRequest.success;    update();  }  get_all_data() async {    statusRequest = StatusRequest.loading;    await get_caegories();    await get_items();    await get_items_selected();    statusRequest = StatusRequest.success;    update();  }  delete_item(MainItemModel item, context) async {    AwesomeDialog(      context: context,      dialogType: DialogType.info,      animType: AnimType.rightSlide,      title: 'Delete Alert',      desc: 'Are you sure to delete this item ?',      btnCancelOnPress: () {},      btnOkOnPress: () async {        statusRequest = StatusRequest.loading;        update();        await itemsData            .delete_item(item.itemId.toString(), item.itemImage.toString())            .then((val) async {          if (val['status'] == 'success') {            await get_all_data();            statusRequest = StatusRequest.success;            update();          }        });      },    ).show();  }  // bool is_edit ;  // is_display == true ? display : edit  GoToDetails () {    Get.toNamed(RouteName.details_item_screen);  }  GoToAddEdit (item) {    Get.toNamed(RouteName.add_item_screen,arguments: {      'item' : item,      'categories' : categories,    });  }  @override  void onInit() async {    await get_all_data();    update();    super.onInit();  }}